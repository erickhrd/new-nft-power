{"ast":null,"code":"// require('dotenv').config();\n// const key = process.env.REACT_APP_PINATA_KEY;\n// const secret = process.env.REACT_APP_PINATA_SECRET;\n// const axios = require('axios');\n// export const pinJSONToIPFS = async(JSONBody) => {\n//     const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n//     //making axios POST request to Pinata ⬇️\n//     return axios \n//         .post(url, JSONBody, {\n//             headers: {\n//                 pinata_api_key: key,\n//                 pinata_secret_api_key: secret,\n//             }\n//         })\n//         .then(function (response) {\n//            return {\n//                success: true,\n//                pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n//            };\n//         })\n//         .catch(function (error) {\n//             console.log(error)\n//             return {\n//                 success: false,\n//                 message: error.message,\n//             }\n//     });\n// };","map":{"version":3,"sources":["/Users/Macbook/nft-minter-practice/nft-minter-tutorial/minter-starter-files/src/utils/pinata.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// require('dotenv').config();\n// const key = process.env.REACT_APP_PINATA_KEY;\n// const secret = process.env.REACT_APP_PINATA_SECRET;\n\n// const axios = require('axios');\n\n// export const pinJSONToIPFS = async(JSONBody) => {\n//     const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n//     //making axios POST request to Pinata ⬇️\n//     return axios \n//         .post(url, JSONBody, {\n//             headers: {\n//                 pinata_api_key: key,\n//                 pinata_secret_api_key: secret,\n//             }\n//         })\n//         .then(function (response) {\n//            return {\n//                success: true,\n//                pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n//            };\n//         })\n//         .catch(function (error) {\n//             console.log(error)\n//             return {\n//                 success: false,\n//                 message: error.message,\n//             }\n\n//     });\n// };"]},"metadata":{},"sourceType":"module"}